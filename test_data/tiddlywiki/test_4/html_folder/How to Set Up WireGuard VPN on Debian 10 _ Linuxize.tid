caption: How to Set Up WireGuard VPN on Debian 10 : Linuxize
created: 20230118012130336
location: https://linuxize.com/post/how-to-set-up-wireguard-vpn-on-debian-10/
modified: 20230118012130336
title: How to Set Up WireGuard VPN on Debian 10 : Linuxize
type: text/vnd.tiddlywiki
when: 2023/1/17 19:21:30

https://linuxize.com/post/how-to-set-up-wireguard-vpn-on-debian-10/

<p>WireGuard is a general-purpose VPN (Virtual Private Network) that utilizes state-of-the-art cryptography. Compared to other popular VPN solutions, such as IPsec and <a href="https://linuxize.com/post/how-to-set-up-an-openvpn-server-on-debian-9/">OpenVPN</a>
, <a rel="noopener" href="https://www.wireguard.com/">WireGuard</a>
is generally faster, easier to configure, and has a smaller footprint. It is cross-platform and can run almost anywhere, including Linux, Windows, Android, and macOS.</p><p>Wireguard is a peer-to-peer VPN; it does not use the client-server model. Depending on the configuration, a peer can act as a traditional server or client. It works by creating a network interface on each peer device that acts as a tunnel. Peers authenticate each other by exchanging and validating public keys, mimicking the SSH model. Public keys are mapped with a list of IP addresses that are allowed in the tunnel. The VPN traffic is encapsulated in UDP.<span class="ezoic-adpicker-ad" id="ezoic-pub-ad-placeholder-158"></span></p><p>This article explains how to install and configure WireGuard on Debian 10 that will act as a VPN server. We’ll also show you how to configure WireGuard as a client on Linux, Windows, and macOS. The client’s traffic will be routed through the Debian 10 server.<span class="ezoic-adpicker-ad" id="ezoic-pub-ad-placeholder-138"></span><span data-ez-name="linuxize_com-box-3" class="ezoic-ad ezoic-at-0 box-3 box-3138 adtester-container adtester-container-138"><span class="ezoic-ad" style="position:relative;z-index:0;display:inline-block;padding:0;min-height:250px;min-width:300px;" id="div-gpt-ad-linuxize_com-box-3-0"></span></span></p><p>This setup can be used as a protection against Man in the Middle attacks, surfing the web anonymously, bypassing Geo-restricted content, or allowing your colleagues who work from home to connect to the company network securely.</p><h2 class="" id="prerequisites">Prerequisites <a aria-hidden="true" href="https://linuxize.com/post/how-to-set-up-wireguard-vpn-on-debian-10/#prerequisites" class="headline-link">#</a></h2><p>To follow this guide, you’ll need a machine with Debian 10 installed. You also need root or [sudo access](https://linuxize.com/post/how-to-create-a-sudo-user-on-debian/ to install packages and make changes to the system.<span class="ezoic-adpicker-ad" id="ezoic-pub-ad-placeholder-139"></span></p><h2 class="" id="setting-up-the-wireguard-server">Setting Up the WireGuard Server <a aria-hidden="true" href="https://linuxize.com/post/how-to-set-up-wireguard-vpn-on-debian-10/#setting-up-the-wireguard-server" class="headline-link">#</a></h2><p>We’ll start by installing the WireGuard package on the Debian machine and set it up to act as a server. We’ll also configure the system to route the clients’ traffic through it.<span class="ezoic-adpicker-ad" id="ezoic-pub-ad-placeholder-156"></span></p><h3 class="" id="install-wireguard-on-debian-10">Install WireGuard on Debian 10 <a aria-hidden="true" href="https://linuxize.com/post/how-to-set-up-wireguard-vpn-on-debian-10/#install-wireguard-on-debian-10" class="headline-link">#</a></h3><p>WireGuard is available from the Debian backports repositories. To add the repository to your system, run:<span class="ezoic-adpicker-ad" id="ezoic-pub-ad-placeholder-140"></span><span data-ez-name="linuxize_com-medrectangle-3" class="ezoic-ad ezoic-at-0 medrectangle-3 medrectangle-3140 adtester-container adtester-container-140 ezoic-ad-adaptive"><span data-ez-name="linuxize_com-medrectangle-3" class="ezoic-ad medrectangle-3 medrectangle-3-multi-140 adtester-container adtester-container-140"><span class="ezoic-ad" style="position:relative;z-index:0;display:inline-block;padding:0;min-height:250px;min-width:290px;" id="div-gpt-ad-linuxize_com-medrectangle-3-0"></span></span><span data-ez-name="linuxize_com-medrectangle-3" class="ezoic-ad medrectangle-3 medrectangle-3-multi-140 adtester-container adtester-container-140"><span class="ezoic-ad" style="position:relative;z-index:0;display:inline-block;padding:0;min-height:250px;min-width:290px;" id="div-gpt-ad-linuxize_com-medrectangle-3-0_1"></span></span><style> .medrectangle-3-multi-140{border:none !important;display:block !important;float:none !important;line-height:0px;margin-bottom:24px !important;margin-left:auto !important;margin-right:auto !important;margin-top:24px !important;max-width:100% !important;min-height:250px;min-width:250px;padding:0;text-align:center !important;}</style><style media="screen" class="darkreader darkreader--sync"></style></span></p><pre class="terminal"><code class="terminal-line">echo 'deb http://ftp.debian.org/debian buster-backports main' | sudo tee /etc/apt/sources.list.d/buster-backports.list</code><button type="button" class="code-copy button main small">Copy</button></pre><p>Once the repository is enabled, update the apt cache and install the WireGuard module and tools:</p><pre class="terminal"><code class="terminal-line">sudo apt update</code><code class="terminal-line">sudo apt install wireguard</code><button type="button" class="code-copy button main small">Copy</button><button type="button" class="code-copy button main small">Copy</button></pre><div class="note bg-yellow-100 dark:bg-gray-800 border-l-4 border-yellow-400 dark:border-0 dark:text-yellow-200 p-6 my-6"><div class="flex"><div class="text-sm font-sans w-full">WireGuard runs as a kernel module.</div></div></div><h3 class="" id="configuring-wireguard">Configuring WireGuard <a aria-hidden="true" href="https://linuxize.com/post/how-to-set-up-wireguard-vpn-on-debian-10/#configuring-wireguard" class="headline-link">#</a></h3><p>You can configure and manage the WireGuard interfaces with the <code>wg</code> and <code>wg-quick</code> command-line tools.</p><p>Each device in the WireGuard VPN network needs to have a private and public key. Run the following command to generate the key pair:</p><pre class="terminal"><code class="terminal-line">wg genkey | sudo tee /etc/wireguard/privatekey | wg pubkey | sudo tee /etc/wireguard/publickey</code><button type="button" class="code-copy button main small">Copy</button></pre><p>The files are generated in the <code>/etc/wireguard</code> directory. Use the <a href="https://linuxize.com/post/linux-cat-command/"><code>cat</code></a>
or <a href="https://linuxize.com/post/linux-cat-command/"><code>less</code></a>
commands to view the contents of the files. The private key should never be shared with anyone and should always be kept secure.</p><p>Wireguard also supports a pre-shared key, which adds an additional layer of symmetric-key cryptography. This key is optional and must be unique for each peer pair.<span class="ezoic-adpicker-ad" id="ezoic-pub-ad-placeholder-142"></span></p><p>The next step is to configure the tunnel device that will route the VPN traffic.<span class="ezoic-adpicker-ad" id="ezoic-pub-ad-placeholder-160"></span><span data-ez-name="linuxize_com-medrectangle-4" class="ezoic-ad ezoic-at-0 medrectangle-4 medrectangle-4160 adtester-container adtester-container-160 ezoic-ad-adaptive"><span data-ez-name="linuxize_com-medrectangle-4" class="ezoic-ad medrectangle-4 medrectangle-4-multi-160 adtester-container adtester-container-160"><span class="ezoic-ad" style="position:relative;z-index:0;display:inline-block;padding:0;min-height:250px;min-width:290px;" id="div-gpt-ad-linuxize_com-medrectangle-4-0"></span></span><span data-ez-name="linuxize_com-medrectangle-4" class="ezoic-ad medrectangle-4 medrectangle-4-multi-160 adtester-container adtester-container-160"><span class="ezoic-ad" style="position:relative;z-index:0;display:inline-block;padding:0;min-height:250px;min-width:290px;" id="div-gpt-ad-linuxize_com-medrectangle-4-0_1"></span></span><style> .medrectangle-4-multi-160{border:none !important;display:block !important;float:none !important;line-height:0px;margin-bottom:2px !important;margin-left:auto !important;margin-right:auto !important;margin-top:10px !important;max-width:100% !important;min-height:250px;min-width:250px;padding:0;text-align:center !important;}</style><style media="screen" class="darkreader darkreader--sync"></style></span></p><p>The device can be set up either from the command line using the <a href="https://linuxize.com/post/linux-ip-command/"><code>ip</code></a>
and <code>wg</code> commands, or by manually creating the configuration file. We’ll create the configuration with a text editor.</p><p>Open your editor and create a new file named <code>wg0.conf</code> with the following contents:</p><pre class="terminal"><code class="terminal-line">sudo nano /etc/wireguard/wg0.conf</code><button type="button" class="code-copy button main small">Copy</button></pre><div class="code-label">/etc/wireguard/wg0.conf</div><div class="highlight"><pre class="chroma" tabindex="0"><code data-lang="ini" class="language-ini"><span class="line"><span class="cl"><span class="k">[Interface]</span>
</span></span><span class="line"><span class="cl"><span class="na">Address</span> <span class="o">=</span> <span class="s">10.0.0.1/24</span>
</span></span><span class="line"><span class="cl"><span class="na">SaveConfig</span> <span class="o">=</span> <span class="s">true</span>
</span></span><span class="line"><span class="cl"><span class="na">ListenPort</span> <span class="o">=</span> <span class="s">51820</span>
</span></span><span class="line"><span class="cl"><span class="na">PrivateKey</span> <span class="o">=</span> <span class="s">SERVER_PRIVATE_KEY</span>
</span></span><span class="line"><span class="cl"><span class="na">PostUp</span> <span class="o">=</span> <span class="s">iptables -A FORWARD -i %i -j ACCEPT; iptables -t nat -A POSTROUTING -o ens3 -j MASQUERADE</span>
</span></span><span class="line"><span class="cl"><span class="na">PostDown</span> <span class="o">=</span> <span class="s">iptables -D FORWARD -i %i -j ACCEPT; iptables -t nat -D POSTROUTING -o ens3 -j MASQUERADE</span>
</span></span></code></pre><button type="button" class="code-copy button main small">Copy</button></div><p>You can name the interface anything you want to. However it is recommended to use something like <code>wg0</code> or <code>wgvpn0</code>.<span class="ezoic-adpicker-ad" id="ezoic-pub-ad-placeholder-143"></span><span data-ez-name="linuxize_com-box-4" class="ezoic-ad ezoic-at-0 box-4 box-4143 adtester-container adtester-container-143"><span class="ezoic-ad" style="position:relative;z-index:0;display:inline-block;padding:0;width:100%;max-width:1200px;margin-left:auto !important;margin-right:auto !important;min-height:90px;min-width:728px;" id="div-gpt-ad-linuxize_com-box-4-0"></span></span></p><p><span class="ezoic-adpicker-ad" id="ezoic-pub-ad-placeholder-161"></span>The settings in the interface section have the following meaning:</p><ul><li><p>Address - A comma-separated list of v4 or v6 IP addresses for the <code>wg0</code> interface. You can you an IP address from a range that is reserved for the private networks (10.0.0.0/8, 172.16.0.0/12 or 192.168.0.0/16).</p></li><li><p>ListenPort - The listening port.<span class="ezoic-adpicker-ad" id="ezoic-pub-ad-placeholder-150"></span></p></li><li><p>PrivateKey - A private key generated by the <code>wg genkey</code> command. (To see the contents of the file type: <code>sudo cat /etc/wireguard/privatekey</code>)</p></li><li><p>SaveConfig - When set to true, the current state of the interface is saved to the configuration file when shutdown.</p></li><li><p>PostUp - Command or script that is executed before bringing the interface up. In this example, we’re using iptables to enable masquerading. This allows traffic to leave the server, giving the VPN clients access to the Internet.</p><p>Make sure to replace <code>ens3</code> after <code>-A POSTROUTING</code> to match the name of your public network interface. You can easily find the interface with:</p><pre class="terminal"><code class="terminal-line">ip -o -4 route show to default | awk '{print $5}'</code><button type="button" class="code-copy button main small">Copy</button></pre></li><li><p>PostDown - A command or script which is executed before bringing the interface down. The iptables rules will be removed once the interface is down.</p></li></ul><p>The <code>wg0.conf</code> and <code>privatekey</code> files should not be readable to normal users. Use <a href="https://linuxize.com/post/chmod-command-in-linux/"><code>chmod</code></a>
to set the files permissions to <code>600</code>:</p><pre class="terminal"><code class="terminal-line">sudo chmod 600 /etc/wireguard/{privatekey,wg0.conf}</code><button type="button" class="code-copy button main small">Copy</button></pre><p>Once done, bring the <code>wg0</code> interface up using the attributes specified in the configuration file:<span class="ezoic-adpicker-ad" id="ezoic-pub-ad-placeholder-144"></span><span data-ez-name="linuxize_com-link-v-med-2" class="ezoic-ad ezoic-at-1 link-v-med-2 link-v-med-2144 adtester-container adtester-container-144"></span></p><div class="ezo_link_unit_a" id="linuxize_com-link-v-med-2"><ins data-ad-channel="7012520740" data-ad-slot="2822423476" data-ad-client="ca-pub-9439755881064125" style="display:inline-block;width:160px;height:90px" class="adsbygoogle"></ins></div><p></p><pre class="terminal"><code class="terminal-line">sudo wg-quick up wg0</code><button type="button" class="code-copy button main small">Copy</button></pre><p>The output will look something like this:</p><pre tabindex="0"><code data-lang="output" class="language-output">[#] ip link add wg0 type wireguard
[#] wg setconf wg0 /dev/fd/63
[#] ip -4 address add 10.0.0.1/24 dev wg0
[#] ip link set mtu 1420 up dev wg0
[#] iptables -A FORWARD -i wg0 -j ACCEPT; iptables -t nat -A POSTROUTING -o ens3 -j MASQUERADE
</code><button type="button" class="code-copy button main small">Copy</button></pre><p>To check the interface state and configuration, run:<span class="ezoic-adpicker-ad" id="ezoic-pub-ad-placeholder-157"></span><span data-ez-name="linuxize_com-large-mobile-banner-1" class="ezoic-ad ezoic-at-0 large-mobile-banner-1 large-mobile-banner-1157 adtester-container adtester-container-157"><span class="ezoic-ad" style="position:relative;z-index:0;display:inline-block;padding:0;width:100%;max-width:1200px;margin-left:auto !important;margin-right:auto !important;min-height:400px;min-width:580px;" id="div-gpt-ad-linuxize_com-large-mobile-banner-1-0"></span></span></p><pre class="terminal"><code class="terminal-line">sudo wg show wg0</code><button type="button" class="code-copy button main small">Copy</button></pre><pre tabindex="0"><code data-lang="output" class="language-output">interface: wg0
  public key: +Vpyku+gjVJuXGR/OXXt6cmBKPdc06Qnm3hpRhMBtxs=
  private key: (hidden)
  listening port: 51820
</code><button type="button" class="code-copy button main small">Copy</button></pre><p>You can also verify the interface state with <code>ip a show wg0</code>:<span class="ezoic-adpicker-ad" id="ezoic-pub-ad-placeholder-145"></span><span data-ez-name="linuxize_com-banner-1" class="ezoic-ad ezoic-at-0 banner-1 banner-1145 adtester-container adtester-container-145 ezoic-ad-adaptive"><span data-ez-name="linuxize_com-banner-1" class="ezoic-ad banner-1 banner-1-multi-145 adtester-container adtester-container-145"><span class="ezoic-ad" style="position:relative;z-index:0;display:inline-block;padding:0;min-height:250px;min-width:290px;" id="div-gpt-ad-linuxize_com-banner-1-0"></span></span><span data-ez-name="linuxize_com-banner-1" class="ezoic-ad banner-1 banner-1-multi-145 adtester-container adtester-container-145"><span class="ezoic-ad" style="position:relative;z-index:0;display:inline-block;padding:0;min-height:250px;min-width:290px;" id="div-gpt-ad-linuxize_com-banner-1-0_1"></span></span><style> .banner-1-multi-145{border:none !important;display:block !important;float:none !important;line-height:0px;margin-bottom:15px !important;margin-left:auto !important;margin-right:auto !important;margin-top:15px !important;max-width:100% !important;min-height:250px;min-width:250px;padding:0;text-align:center !important;}</style><style media="screen" class="darkreader darkreader--sync"></style></span></p><pre class="terminal"><code class="terminal-line">ip a show wg0</code><button type="button" class="code-copy button main small">Copy</button></pre><pre tabindex="0"><code data-lang="output" class="language-output">4: wg0: &lt;POINTOPOINT,NOARP,UP,LOWER_UP&gt; mtu 1420 qdisc noqueue state UNKNOWN group default qlen 1000
    link/none 
    inet 10.0.0.1/24 scope global wg0
       valid_lft forever preferred_lft forever
</code><button type="button" class="code-copy button main small">Copy</button></pre><p>WireGuard can be managed with Systemd. To bring the WireGuard interface at boot time, run the following command:</p><pre class="terminal"><code class="terminal-line">sudo systemctl enable wg-quick@wg0</code><button type="button" class="code-copy button main small">Copy</button></pre><h3 class="" id="server-networking-and-firewall-configuration">Server Networking and Firewall Configuration <a aria-hidden="true" href="https://linuxize.com/post/how-to-set-up-wireguard-vpn-on-debian-10/#server-networking-and-firewall-configuration" class="headline-link">#</a></h3><p>IP forwarding must be enabled for NAT to work. Open the <code>/etc/sysctl.conf</code> file and add or uncomment the following line:</p><pre class="terminal"><code class="terminal-line">sudo nano /etc/sysctl.conf</code><button type="button" class="code-copy button main small">Copy</button></pre><div class="code-label">/etc/sysctl.conf</div><div class="highlight"><pre class="chroma" tabindex="0"><code data-lang="ini" class="language-ini"><span class="line hl"><span class="cl"><span class="na">net.ipv4.ip_forward</span><span class="o">=</span><span class="s">1</span></span></span></code></pre><button type="button" class="code-copy button main small">Copy</button></div><p>Save the file and apply the change:</p><pre class="terminal"><code class="terminal-line">sudo sysctl -p</code><button type="button" class="code-copy button main small">Copy</button></pre><pre tabindex="0"><code data-lang="output" class="language-output">net.ipv4.ip_forward = 1
</code><button type="button" class="code-copy button main small">Copy</button></pre><p>If you are using UFW to manage your <a href="https://linuxize.com/post/how-to-setup-a-firewall-with-ufw-on-debian-10/">firewall</a>
you need to open UDP traffic on port <code>51820</code>:<span class="ezoic-adpicker-ad" id="ezoic-pub-ad-placeholder-146"></span><span data-ez-name="linuxize_com-large-leaderboard-2" class="ezoic-ad ezoic-at-0 large-leaderboard-2 large-leaderboard-2146 adtester-container adtester-container-146"><span class="ezoic-ad" style="position:relative;z-index:0;display:inline-block;padding:0;width:100%;max-width:1200px;margin-left:auto !important;margin-right:auto !important;min-height:90px;min-width:728px;" id="div-gpt-ad-linuxize_com-large-leaderboard-2-0"></span></span></p><pre class="terminal"><code class="terminal-line">sudo ufw allow 51820/udp</code><button type="button" class="code-copy button main small">Copy</button></pre><p>That’s it. The Debian peer that will act as a server has been set up.</p><h2 class="" id="linux-and-macos-clients-setup">Linux and macOS Clients Setup <a aria-hidden="true" href="https://linuxize.com/post/how-to-set-up-wireguard-vpn-on-debian-10/#linux-and-macos-clients-setup" class="headline-link">#</a></h2><p>The installation instructions for all supported platforms are available at <a rel="noopener" href="https://wireguard.com/install/">https://wireguard.com/install/</a>
. On Linux systems, you can install the package using the distribution package manager and on macOS with <code>brew</code>.</p><p>Once installed, follow the steps below to configure the client device.</p><p>The process for setting up a Linux and macOS client is pretty much the same as you did for the server. First, generate the public and private keys:</p><pre class="terminal secondary-terminal"><code class="terminal-line">wg genkey | sudo tee /etc/wireguard/privatekey | wg pubkey | sudo tee /etc/wireguard/publickey</code><button type="button" class="code-copy button main small">Copy</button></pre><p>Create the file <code>wg0.conf</code> and add the following contents:<span class="ezoic-adpicker-ad" id="ezoic-pub-ad-placeholder-147"></span><span data-ez-name="linuxize_com-leader-1" class="ezoic-ad ezoic-at-0 leader-1 leader-1147 adtester-container adtester-container-147"><span class="ezoic-ad" style="position:relative;z-index:0;display:inline-block;padding:0;width:100%;max-width:1200px;margin-left:auto !important;margin-right:auto !important;min-height:90px;min-width:728px;" id="div-gpt-ad-linuxize_com-leader-1-0"></span></span></p><pre class="terminal secondary-terminal"><code class="terminal-line">sudo nano /etc/wireguard/wg0.conf</code><button type="button" class="code-copy button main small">Copy</button></pre><div class="code-label">/etc/wireguard/wg0.conf</div><div class="highlight"><pre class="chroma" tabindex="0"><code data-lang="ini" class="language-ini"><span class="line"><span class="cl"><span class="k">[Interface]</span>
</span></span><span class="line"><span class="cl"><span class="na">PrivateKey</span> <span class="o">=</span> <span class="s">CLIENT_PRIVATE_KEY</span>
</span></span><span class="line"><span class="cl"><span class="na">Address</span> <span class="o">=</span> <span class="s">10.0.0.2/24</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">[Peer]</span>
</span></span><span class="line"><span class="cl"><span class="na">PublicKey</span> <span class="o">=</span> <span class="s">SERVER_PUBLIC_KEY</span>
</span></span><span class="line"><span class="cl"><span class="na">Endpoint</span> <span class="o">=</span> <span class="s">SERVER_IP_ADDRESS:51820</span>
</span></span><span class="line"><span class="cl"><span class="na">AllowedIPs</span> <span class="o">=</span> <span class="s">0.0.0.0/0</span>
</span></span></code></pre><button type="button" class="code-copy button main small">Copy</button></div><p>The settings in the interface section have the same meaning as when setting up the server:</p><ul><li>Address - A comma-separated list of v4 or v6 IP addresses for the <code>wg0</code> interface.</li><li>PrivateKey - To see the contents of the file on the client machine, run: <code>sudo cat /etc/wireguard/privatekey</code></li></ul><p>The peer section contains the following fields:</p><ul><li>PublicKey - A public key of the peer you want to connect to. (The contents of the server’s <code>/etc/wireguard/publickey</code> file).</li><li>Endpoint - An IP or hostname of the peer you want to connect to, followed by a colon and then a port number on which the remote peer listens to.</li><li>AllowedIPs - A comma-separated list of v4 or v6 IP addresses from which incoming traffic for the peer is allowed and to which outgoing traffic for this peer is directed. We’re using 0.0.0.0/0 because we are routing the traffic and want the server peer to send packets with any source IP.</li></ul><p>If you need to configure additional clients, just repeat the same steps using a different private IP address.</p><h2 class="" id="windows-clients-setup">Windows Clients Setup <a aria-hidden="true" href="https://linuxize.com/post/how-to-set-up-wireguard-vpn-on-debian-10/#windows-clients-setup" class="headline-link">#</a></h2><p>Download and install the Windows msi package from the <a rel="noopener" href="https://wireguard.com/install/">WireGuard website</a>
.</p><p>Once installed, open the WireGuard application and click on “Add Tunnel” -&gt; “Add empty tunnel…” as shown on the image below:</p><figure class="relative"><div class="relative block w-full mx-auto my-0"><div style="padding-bottom:74.48680351906158%" class="block"></div><div class="bg-gray-100 absolute inset-0 w-full h-full m-auto overflow-hidden"><img alt="WireGuard Windows add Tunnel" src="https://linuxize.com/post/how-to-set-up-wireguard-vpn-on-debian-10/windows-add-tunnel_hu56a3787b65506e3031c39b5f2d23f7ff_36326_768x0_resize_q75_lanczos.jpg" loading="lazy" class="absolute inset-0 w-full h-full m-auto"></div></div></figure><p>A publickey pair is automatically created and displayed on the screen.</p><figure class="relative"><div class="relative block w-full mx-auto my-0"><div style="padding-bottom:74.48680351906158%" class="block"></div><div class="bg-gray-100 absolute inset-0 w-full h-full m-auto overflow-hidden"><img alt="WireGuard Windows Tunnel" src="https://linuxize.com/post/how-to-set-up-wireguard-vpn-on-debian-10/windows-tunnel_huec2f8613c4e0f62234ee1d2c887150b3_60380_768x0_resize_q75_lanczos.jpg" loading="lazy" class="absolute inset-0 w-full h-full m-auto"></div></div></figure><p>Enter a name for the tunnel and edit the configuration as follows:<span class="ezoic-adpicker-ad" id="ezoic-pub-ad-placeholder-149"></span></p><div class="highlight"><pre class="chroma" tabindex="0"><code data-lang="ini" class="language-ini"><span class="line"><span class="cl"><span class="k">[Interface]</span>
</span></span><span class="line"><span class="cl"><span class="na">PrivateKey</span> <span class="o">=</span> <span class="s">CLIENT_PRIVATE_KEY</span>
</span></span><span class="line"><span class="cl"><span class="na">Address</span> <span class="o">=</span> <span class="s">10.0.0.2/24</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">[Peer]</span>
</span></span><span class="line"><span class="cl"><span class="na">PublicKey</span> <span class="o">=</span> <span class="s">SERVER_PUBLIC_KEY</span>
</span></span><span class="line"><span class="cl"><span class="na">Endpoint</span> <span class="o">=</span> <span class="s">SERVER_IP_ADDRESS:51820</span>
</span></span><span class="line"><span class="cl"><span class="na">AllowedIPs</span> <span class="o">=</span> <span class="s">0.0.0.0/0</span>
</span></span></code></pre><button type="button" class="code-copy button main small">Copy</button></div><p>In the interface section, add a new line to define the client tunnel Address.</p><p>In the peer section, add the following fields:</p><ul><li>PublicKey - The public key of the Debian server (<code>/etc/wireguard/publickey</code> file).</li><li>Endpoint - The IP address of the Debian server followed by a colon and WireGuard port (51820).</li><li>AllowedIPs - 0.0.0.0/0</li></ul><p>Once done, click on the “Save” button.</p><h2 class="" id="add-the-client-peer-to-the-server">Add the Client Peer to the Server <a aria-hidden="true" href="https://linuxize.com/post/how-to-set-up-wireguard-vpn-on-debian-10/#add-the-client-peer-to-the-server" class="headline-link">#</a></h2><p>The last step is to add the client’s public key and IP address to the server. To do that, run the following command on the Debian server:</p><pre class="terminal"><code class="terminal-line">sudo wg set wg0 peer CLIENT_PUBLIC_KEY allowed-ips 10.0.0.2</code><button type="button" class="code-copy button main small">Copy</button></pre><p>Make sure to change the <code>CLIENT_PUBLIC_KEY</code> with the public key you generated on the client machine (<code>sudo cat /etc/wireguard/publickey</code>) and adjust the client IP address if it is different. Windows users can copy the public key from the WireGuard application.</p><p>Once done, go back to the client machine and bring up the tunneling interface.</p><h3 class="" id="linux-and-macos-clients">Linux and macOS Clients <a aria-hidden="true" href="https://linuxize.com/post/how-to-set-up-wireguard-vpn-on-debian-10/#linux-and-macos-clients" class="headline-link">#</a></h3><p>Run the following command the bring up the interface:</p><pre class="terminal secondary-terminal"><code class="terminal-line">sudo wg-quick up wg0</code><button type="button" class="code-copy button main small">Copy</button></pre><p>Now you should be connected to the Debian server, and the traffic from your client machine should be routed through it. You can check the connection with:</p><pre class="terminal secondary-terminal"><code class="terminal-line">sudo wg</code><button type="button" class="code-copy button main small">Copy</button></pre><pre tabindex="0"><code data-lang="output" class="language-output">interface: wg0
  public key: gFeK6A16ncnT1FG6fJhOCMPMeY4hZa97cZCNWis7cSo=
  private key: (hidden)
  listening port: 53527
  fwmark: 0xca6c

peer: r3imyh3MCYggaZACmkx+CxlD6uAmICI8pe/PGq8+qCg=
  endpoint: XXX.XXX.XXX.XXX:51820
  allowed ips: 0.0.0.0/0
  latest handshake: 53 seconds ago
  transfer: 3.23 KiB received, 3.50 KiB sent
</code><button type="button" class="code-copy button main small">Copy</button></pre><p>You can also open your browser, type “what is my ip”, and you should see your Debian server IP address.</p><p>To stop the tunneling, bring down the <code>wg0</code> interface:<span class="ezoic-adpicker-ad" id="ezoic-pub-ad-placeholder-148"></span><span data-ez-name="linuxize_com-link-v-med-1" class="ezoic-ad ezoic-at-1 link-v-med-1 link-v-med-1148 adtester-container adtester-container-148"></span></p><div class="ezo_link_unit_a" id="linuxize_com-link-v-med-1"><ins data-ad-channel="7012520740" data-ad-slot="7883178466" data-ad-client="ca-pub-9439755881064125" style="display:inline-block;width:160px;height:90px" class="adsbygoogle"></ins></div><p></p><pre class="terminal secondary-terminal"><code class="terminal-line">sudo wg-quick down wg0</code><button type="button" class="code-copy button main small">Copy</button></pre><h3 class="h-is-active" id="windows-clients">Windows Clients <a aria-hidden="true" href="https://linuxize.com/post/how-to-set-up-wireguard-vpn-on-debian-10/#windows-clients" class="headline-link">#</a></h3><p>If you installed WireGuard on Windows, click on the “Activate” button. Once the peers are connected, the tunnel status will change to Active:</p><figure class="relative"><div class="relative block w-full mx-auto my-0"><div style="padding-bottom:74.48680351906158%" class="block"></div><div class="bg-gray-100 absolute inset-0 w-full h-full m-auto overflow-hidden"><img alt="WireGuard Windows connect Tunnel" src="https://linuxize.com/post/how-to-set-up-wireguard-vpn-on-debian-10/windows-connect-tunnel_hud873eb0fda625aa40c16e0159ae1b4f2_73122_768x0_resize_q75_lanczos.jpg" loading="lazy" class="absolute inset-0 w-full h-full m-auto"></div></div></figure><h2 class="h-is-visible h-is-highlight" id="conclusion">Conclusion</h2>

