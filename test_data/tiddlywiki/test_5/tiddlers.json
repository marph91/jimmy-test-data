[
  {
    "title": "中文社区 - Chinese Community",
    "tags": "Community",
    "text": "# A Chinese community tutorial program that people can edit together:\n#* Main site: [ext[https://tw-cn.netlify.app/]]\n#* Accelerated access: [ext[https://tw-cn.cpolar.top/]]\n#* Alternate: [ext[https://tiddly-wiki-chinese-tutorial.vercel.app]]\n# Tiddlywiki Chinese Chat Forum: [ext[https://talk.tidgi.fun/topic/6]]\n# Chinese translation of Tiddlywiki official website [ext[https://bramchen.github.io/tw5-docs/zh-Hans/]]\n# The best Chinese introductory tutorial for newbies [ext[https://keatonlao.github.io/tiddlywiki-xp/]]\n\n---\n\n# 大家可以一起编辑的中文社区教程项目：\n#* 主站：[ext[https://tw-cn.netlify.app/]]\n#* 加速访问：[ext[https://tw-cn.cpolar.top/]]\n#* 备用：[ext[https://tiddly-wiki-chinese-tutorial.vercel.app]]\n# 太微中文交流论坛：[ext[https://talk.tidgi.fun/topic/6]]\n# 太微官网汉化版：[ext[https://bramchen.github.io/tw5-docs/zh-Hans/]]\n# 最适合新手的中文入门教程：[ext[https://keatonlao.github.io/tiddlywiki-xp/]]\n"
  },
  {
    "title": "Block Mode WikiText",
    "caption": "block parser mode",
    "created": "20220110234234616",
    "modified": "20240512001555383",
    "tags": "[[WikiText Parser Modes]]",
    "type": "text/vnd.tiddlywiki",
    "text": "Some WikiText is recognised only while the parser is in block mode.\n\nCommon characteristics of such block mode WikiText:\n\n* At least one entire line is required to delimit the WikiText.\n* The closing punctuation must come at the end of the line (in some cases the end of the line //is// the closing punctuation.\n\n|!~WikiText|!Punctuation|\n|[[Block Quotes in WikiText]] |Multi-line block quotes are enclosed by lines containing only the text `<<<`; single line block quotes are also possible.|\n|[[Code Blocks in WikiText]]|Enclosed by lines containing only the text <code>&#96;&#96;&#96;</code>|\n|[[Definitions in WikiText]]|Each term is on its own line and each definition is on its own line.|\n|[[Hard Linebreaks in WikiText]]|Enclosed by lines containing only the text `\"\"\"`.|\n|[[Headings in WikiText]]|Entire line starting with `!`.|\n|[[Horizontal Rules in WikiText]]|A line containing only the text `---`.|\n|[[Lists in WikiText]]|Each list item is on its own line.|\n|[[Paragraphs in WikiText]]|Any text other than the start punctuation of one of the other block mode WikiText will start a paragraph. Even the start punctuation of inline mode WikiText will start a paragraph. The parser includes all following lines into the paragraph until it encounters a blank line.|\n|[[Styles and Classes in WikiText]]|Enclosed by lines starting with `@@`.|\n|[[Tables in WikiText]]|Each table row is a line starting and ending with `|`.|\n|[[Typed Blocks in WikiText]]|Enclosed by lines starting with `$$`.|\n\nThe above WikiText types are only recognised in ''block mode''. However, the text <<.em enclosed>> by most of them will be parsed in ''inline mode'' ([[Block Quotes in WikiText]] and [[Styles and Classes in WikiText]] are the two exceptions in which the parser will continue in ''block mode''). While in ''inline mode'' the parser may encounter something which moves it to ''block mode'' (see [[WikiText parser mode transitions]]).\n\nAt the end of the terminating line, the parser will return to ''block mode''. \n<<.tip 'Note: [[Hard Linebreaks in WikiText]] require an extra blank line after the trailing `\"\"\"` before the parser will return to <strong>block mode</strong>.'>>\n\nIf the punctuation for the above types of WikiText is encountered while the parser is in ''inline mode'', it will be //ignored// and output as-is.\n\n[[Examples|Block Mode WikiText (Examples)]]"
  },
  {
    "title": "Brackets",
    "created": "20220728145925343",
    "modified": "20220728150440771",
    "tags": "Definitions",
    "type": "text/vnd.tiddlywiki",
    "text": "WikiText syntax uses a number of different types of brackets. Their names are shown in the table below:\n\n|!Appearance |!Name |!Short name |!Usage |\n|`()` |Round brackets |Parenthesis |Not used in WikiText |\n|`[]` |Square brackets |Brackets |[[Links|Linking in WikiText]], [[Filters|Filters]] |\n|`{}` |Curly brackets |Braces |[[Text references|TextReference]], [[Filtered attributes|HTML in WikiText]] |\n|`<>` |Angle brackets |Chevrons |[[HTML elements and widgets|HTML in WikiText]], [[Macros]] |\n\n"
  },
  {
    "title": "Map Filter Run Prefix (Examples)",
    "created": "20210618134753828",
    "modified": "20230305125405422",
    "tags": "[[Map Filter Run Prefix]]",
    "type": "text/vnd.tiddlywiki",
    "text": "Replace the input titles with the caption field if it exists, otherwise preserve the input title:\n\n<<.operator-example 1 \"[tag[Widgets]] :map[get[caption]else{!!title}]\">>\n\n<<.tip \"The above example is equivalent to `[tag[Widgets]] :map[{!!caption}!is[blank]else{!!title}]`. Note that referencing a field as a text reference such as `{!!caption}` returns an empty string for a non-existent or empty caption field. Therefore a check for `is[blank]` is needed before the `else` operator\">>\n\n\nFor each title in a shopping list, calculate the total cost of purchasing each item:\n\n<<.operator-example 2 \"[tag[shopping]] :map[get[quantity]else[0]multiply{!!price}]\">>\n\nGet the tags of all tiddlers tagged `Widget:`\n\n<<.operator-example 3 \"[tag[Widgets]] :map:flat[tagging[]] :and[!is[blank]unique[]]\">>\n<<.tip \"Without the `flat` suffix the `:map` filter run only returns the first result for each input title\">>\n\n!! Comparison between `:map` with and without the `flat` suffix\n\nThe `:map` filter run will return at least as many outputs as given in the input.  By default one input item will result in exactly one output item. When the filter run transforms an input item into an empty result, the output for that item will be an empty string. When the filter run transforms an input item into multiple items, only the first item will appear in the output. This behavior can be overridden by providing the `flat` suffix. The `flat` suffix will cause all the items to appear in the output.\n\n| `:map` | `:map:flat` |\n|^<<.operator-example m0.1 \"[range[4]] :map[match[this matches nothing]]\">>|^<<.operator-example m0.2 \"[range[4]] :map:flat[match[this matches nothing]]\">>|\n|^<<.operator-example m1.1 \"[range[4]] :map[range<currentTiddler>]\">>|^<<.operator-example m1.2 \"[range[4]] :map:flat[range<currentTiddler>]\">>|\n|^<<.operator-example m2.1 \"[range[4]] :map[range<currentTiddler>]\">>|^<<.operator-example m2.2 \"[range[4]] :map:flat[range<currentTiddler>first[]]\">>|\n|^<<.operator-example m3.1 \"[range[4]] :map[range<currentTiddler>sum[]]\">>|^<<.operator-example m3.2 \"[range[4]] :map:flat[range<currentTiddler>sum[]]\">>|\n|^<<.operator-example m4.1 \"[[1,2,3]] [[4,5]] :map[split[,]]\">>|^<<.operator-example m4.2 \"[[1,2,3]] [[4,5]] :map:flat[split[,]]\">>|\n|^<<.operator-example m5.1 \"[[1,2,3]] [[4,5]] :map[split[,]]\">>|^<<.operator-example m5.2 \"[[1,2,3]] [[4,5]] :map:flat[split[,]first[]]\">>|\n\n\n!! Comparison between `:map` and `:and`/`+` filter run prefixes\n\nThe functionality of the `:map` filter run prefix has some overlap with the `:and` prefix (alias `+`). They will sometimes return the same results as each other. In at least these cases, the results will be different:\n\n# The `:and` filter run can modify the number of items (either increase or decrease). The `:map` run will never alter the number of items.\n# The number of items in the `:and` filter run will also decrease due to [[de-duplication|Dominant Append]]. The `:map` run will not [[de-duplicate|Dominant Append]].\n# Explicit references to the \"currentTiddler\" variable will behave differently\n# Implicit references to the \"currentTiddler\" using TextReference will behave differently.\n\n| `:map` | `:and` |\n|!results are the same|<|\n|^<<.operator-example 1.1 \"[range[5]] :map[add[1]]\">>|^<<.operator-example 1.2 \"[range[5]] :and[add[1]]\">>|\n|^<<.operator-example 2.1 \"[range[5]] :map[addsuffix[ hello]]\">>|^<<.operator-example 2.2 \"[range[5]] :and[addsuffix[ hello]]\">>|\n|^<<.operator-example 3.1 \"[tag[shopping]] :map[get[quantity]]\">>|^<<.operator-example 3.2 \"[tag[shopping]] :and[get[quantity]]\">>|\n|!decrease in the number of items|<|\n|^<<.operator-example 4.1 \"[range[5]] :map[sum[]]\">>|^<<.operator-example 4.2 \"[range[5]] :and[sum[]]\">>|\n|^<<.operator-example 5.1 \"[range[5]] :map[join[,]]\">>|^<<.operator-example 5.2 \"[range[5]] :and[join[,]]\">>|\n|!increase in the number of items|<|\n|^<<.operator-example 6.1 \"[[1,2,3]] [[4,5]] :map[split[,]]\">>|^<<.operator-example 6.2 \"[[1,2,3]] [[4,5]] :and[split[,]]\">>|\n|!de-duplication|<|\n|^<<.operator-example 7.1 \"[range[5]] :map[[hello]]\">>|^<<.operator-example 7.2 \"[range[5]] :and[[hello]]\">>|\n|!currentTiddler|<|\n|^<<.operator-example 8.1 \"[tag[shopping]] :map[<currentTiddler>]\">>|^<<.operator-example 8.2 \"[tag[shopping]] :and[<currentTiddler>]\">>|\n|^<<.operator-example 9.1 \"[tag[shopping]] :map[{!!quantity}]\">>|^<<.operator-example 9.2 \"[tag[shopping]] :and[{!!quantity}]\">>|\n"
  }
]
